<?php
/*
	$Project$
	$Author$

	$Version$ ($Revision$)
	
*/

namespace extension\ka_extensions\setting;

use \extension\ka_extensions\KamodManager;
use \extension\ka_extensions\Directory;

class ControllerExtension extends Opencart\Admin\Model\Setting\Extension {

	/*
		This function is called on extension activation in Opencart
	*/
	public function install(string $type, string $extension, string $code): void {

		parent::install($type, $extension, $code);

		if ($this->activateKamodForExtension($code)) {
			KamodManager::getInstance()->markKamodCacheInvalid();
		}
	}
	
	/*
		This function is called on extension deactivation in Opencart
	*/
 	public function uninstall(string $type, string $code): void {
 	
 		parent::uninstall($type, $code);
 		
 		if ($this->deactivateKamodForExtension($code)) {
			KamodManager::getInstance()->markKamodCacheInvalid();
		}
	}

	
	public function activateKamodForExtension($code) {
	
		if (!is_dir(DIR_EXTENSION . $code . '/kamod')) {
			return false;
		}
	
		$contents = <<<CNTTXT
This file was generated by kamod automatically.
If you delete the file, kamod modifications of this extension may stop working on next cache rebuild.

More information on kamod can be found here: https://www.ka-station.com/kamod
	
CNTTXT;
	
		$file = DIR_EXTENSION . $code . '/' . KamodManager::ACTIVE_KAMOD_FILE;
		file_put_contents($file, $contents);
		
		\extension\ka_extensions\KamodManager::getInstance()->markKamodCacheInvalid();
		
		return true;
	}
	
	
	public function deactivateKamodForExtension($code) {
		$file = DIR_EXTENSION . $code . '/' . KamodManager::ACTIVE_KAMOD_FILE;

		if (file_exists($file)) {
		
			\extension\ka_extensions\KamodManager::getInstance()->markKamodCacheInvalid();
		
			unlink($file);
			return true;
		}
		
		return false;
	}
	
	
	public function deletePath(int $extension_path_id): void {
	
		$path = $this->db->query("SELECT * FROM " . DB_PREFIX . "extension_path 
			WHERE extension_path_id = '" . $extension_path_id . "'
		")->row;
		
		if (empty($path) || empty($path['path']) || !file_exists(DIR_EXTENSION . $path['path'])) {
			parent::deletePath($extension_path_id);
		}
		
		// here we have to delete the path ourselves otherwise the extension will not be installed properly
		// on next extension upload
		//
		try {
			Directory::deleteDirectory(DIR_EXTENSION . $path['path']);
		} catch (\Exception $e) {
			$this->log->write(__METHOD__ . ": " . $e->getMessage());
			return;
		}
		
		parent::deletePath($extension_path_id);
	}

	/*
		Invalidate kamod cache on each install/uninstall action
	*/
	public function editStatus(int $extension_install_id, bool $status): void {
		parent::editStatus($extension_install_id, $status);
		KamodManager::getInstance()->markKamodCacheInvalid();				
	}	
}