{#
	PARAMS
	field.code  - field code (only a-z,0-9_)
	field.title - field title
	field.name  - field.name (can be an array value like products[123])
	field.value - field value
	field.required -
	field.error - error
	
	array       - field is in that array
	
#}
{% extends '@ka_common/fields/template.twig' %}

{% block field_value %}

              <button type="button" id="button-{{ field.code }}" data-loading-text="{{ text_loading }}" class="btn btn-default"><i class="fa fa-upload"></i> {{ button_upload }}</button>
              <input {% if field.required %} required {% endif %} 
              	type="hidden" 
              	name="{% if array %}{{ array }}[{% endif %}{% if field.name %}{{ field.name }}{% else %}{{ field.code }}{% endif %}{% if array %}]{% endif %}" 
              	value="{{ field.value }}" 
              	placeholder="{{ field.placeholder }}" 
              	id="input-{{ field.code }}" 
              	class="form-control"
              />
              {% if field.value %}
              	<a href="index.php?route=tool/upload/download&code={{ field.value }}&user_token={{ user_token }}">{{ t('Download') }}</a>
              {% endif %}

<script type="text/javascript"><!--
$('button[id^=\'button-{{ field.code }}\']').on('click', function() {
	var element = this;

	$('#form-upload').remove();

	$('body').prepend('<form enctype="multipart/form-data" id="form-upload" style="display: none;"><input type="file" name="file" /></form>');

	$('#form-upload input[name=\'file\']').trigger('click');

	if (typeof timer != 'undefined') {
    	clearInterval(timer);
	}

	timer = setInterval(function() {
		if ($('#form-upload input[name=\'file\']').val() != '') {
			clearInterval(timer);

			$.ajax({
				url: 'index.php?route=tool/upload/upload&user_token={{ user_token }}',
				type: 'post',
				dataType: 'json',
				data: new FormData($('#form-upload')[0]),
				cache: false,
				contentType: false,
				processData: false,
				beforeSend: function() {
					$(element).button('loading');
				},
				complete: function() {
					$(element).button('reset');
				},
				success: function(json) {
					$(element).parent().find('.text-danger').remove();

					if (json['error']) {
						$(node).parent().find('input').after('<div class="text-danger">' + json['error'] + '</div>');
					}

					if (json['success']) {
						alert(json['success']);

						$(element).parent().find('input').val(json['code']);
					}
				},
				error: function(xhr, ajaxOptions, thrownError) {
					alert(thrownError + "\r\n" + xhr.statusText + "\r\n" + xhr.responseText);
				}
			});
		}
	}, 500);
});
//--></script>
{% endblock %}