{# 
 $Project: CSV Product Import $
 $Author: karapuz team <support@ka-station.com> $
 $Version: 6.0.0.2 $ ($Revision: 572 $) 
#}

{% extends '@ka_common/pages/page.twig' %}

{% import '@ka_common/macros/table.twig' as macros %}

{% block page_buttons %}
	{{ macros.button_submit(action_next, 'form-step1', t('Next'), 'fa-play') }}
{% endblock %}        

{% block page_contents %}

	{% embed '@ka_common/card.twig' with {'header': heading_title, icon:'fa-list'} %}
		{% block contents %}

			<form action="{{ action_save }}" method="post" enctype="multipart/form-data" id="form-step1">
				<input type="hidden" name="mode" value="" />

				{{ t('This page allows you to imp...') }}

				<hr>				
				<div class="row">
					<label class="col-md-3 col-form-label">
						<span data-bs-toggle="popover" data-bs-content="{{ t('Profiles can store import p...') }}">{{ t('Profile') }}</span>
					</label>
					<div class="col-md-5">
						{% if (profiles) %} 
							<div class="input-group">
								<select name="profile_id" id="profile_id" class="form-select">
									<option value=""></option>
									{% for profile_id, profile in profiles %}
									<option value="{{ profile_id }}" {% if profile_id == params.profile_id %} selected="selected" {% endif %}>{{ profile }}</option>
									{% endfor %}
						  	</select>
								<button class="btn btn-primary" onclick="javascript: ka_step1.loadProfile();" type="button">{{ t('Load') }}</button>
								<button class="btn btn-danger" onclick="javascript: ka_step1.deleteProfile();" type="button">{{ t('button_delete') }}</button>
							</div>
						{% else %}
							<div class="pt-2">
								{{ t('no profiles present') }}
							</div>
						{% endif %}
					</div>
				</div>
				<hr>
					
				<ul class="nav nav-tabs">
					<li class="nav-item"><a href="#tab-general" class="nav-link active" data-bs-toggle="tab">{{ t('General') }}</a></li>
{#					<li class="nav-item"><a href="#tab-advanced" class="nav-link" data-bs-toggle="tab">{{ t('Advanced') }}</a></li>#}
{#					<li class="nav-item"><a href="#tab-downloads" class="nav-link" data-bs-toggle="tab">{{ t('Downloads') }}</a></li>#}
{#					<li class="nav-item"><a href="#tab-extra" class="nav-link" data-bs-toggle="tab">{{ t('Extra') }}</a></li>#}
					{{ include (dir(_self) ~ 'step1/nav_custom.twig', ignore_missing = true) }}
				</ul>
				
				<div class="tab-content">
					<div class="tab-pane active" id="tab-general">
						{{ include (dir(_self) ~ 'step1/tab_general.twig') }}
					</div>
					<div class="tab-pane" id="tab-advanced">
						{{ include (dir(_self) ~ 'step1/tab_advanced.twig') }}
					</div>
					<div class="tab-pane" id="tab-downloads">
						{{ include (dir(_self) ~ 'step1/tab_downloads.twig') }}
					</div>
					<div class="tab-pane" id="tab-extra">
						{{ include (dir(_self) ~ 'step1/tab_extra.twig') }}
					</div>
					{{ include (dir(_self) ~ 'step1/tab_custom.twig', ignore_missing = true) }}					
				</div>

				{{ t('Please notice that some ma...')|replace({"%settings_url%": settings_url}) }}
								
			</form>
		{% endblock %}
	{% endembed %}

<script type="text/javascript"><!--

var ka_step1 = new function() {

	this.refreshLocation = () => {
	
		var id = $('[name=location]:checked').val();
		
	  if (id == 'server') {
	    $('#local_location').hide();
	    $('#server_location').fadeIn(500);
		  $('#server_location').fadeIn(500);
	  } else if (id == 'local') {
	    $('#server_location').hide();
	    $('#local_location').fadeIn(500);
		  $('#local_location2').fadeIn(500);
	  }
	}	

	this.activateLocation = (id) => {
		this.refreshLocation();
	}

	this.refreshFileType = () => {

		var id = $('[name=fileType]:checked').val();

		if (id == 'shopee') {
			$('#local_location2').fadeIn(500);
		} else if (id == 'kamod') {
			$('#local_location2').hide();
		}
	}

	this.activateFileType = (id) => {
		this.refreshFileType();
	}


	this.refreshDelimiter = () => {
		var id = $('#delimiter_option').val();
	
	  if (id == 'predefined') {
	    $('#custom_delimiter_row').hide();
	    $('#predefined_delimiter_row').show();
	    $('#delimiter_option').val('predefined');

	  } else if (id == 'custom') {
	    $('#predefined_delimiter_row').hide();
	    $('#custom_delimiter_row').show();
	    $('#delimiter_option').val('custom');
	  }
	}
	
	this.activateDelimiter = (id) => {
	
	  if (id == 'predefined') {
	    $('#delimiter_option').val('predefined');

	  } else if (id == 'custom') {
	    $('#delimiter_option').val('custom');
	  }
	
		this.refreshDelimiter();
	}

	this.refreshCharset = () => {
	
		var id = $('#charset_option').val();
	
	  if (id == 'predefined') {
	    $('#custom_charset_row').hide();
	    $('#predefined_charset_row').show();
	  } else if (id == 'custom') {
	    $('#predefined_charset_row').hide();
	    $('#custom_charset_row').show();
	  }
	}	
	
	this.activateCharset = (id) => {
	
	  if (id == 'predefined') {
	    $('#charset_option').val('predefined');

	  } else if (id == 'custom') {
	    $('#charset_option').val('custom');
	  }

		this.refreshCharset();
	}

	this.resetMark = (param) => {
		if (param == 'delimiter') {
			$('#predefined_delimiter_row .l-select-wrapper').removeClass('l-checked');
		} else {
			$('#predefined_charset_row .l-select-wrapper').removeClass('l-checked');
		}
	}

	this.showMark = (param) => {
		if (param == 'delimiter') {
			$('#predefined_delimiter_row .l-select-wrapper').addClass('l-checked');
		} else {
			$('#predefined_charset_row .l-select-wrapper').addClass('l-checked');
		}
	}
	
	this.resetFile = () => {

		$('#file_uploaded').hide();
		$('#file_uploaded > input').prop('disabled', true);
		
		$('#file_upload').show();
	}
	
	
	this.loadProfile = () => {
	  $("#form-step1 input[name='mode']").prop('value', 'load_profile');
	  $("#form-step1").submit();
	}


	this.deleteProfile = () => {
	  $("#form-step1 input[name='mode']").prop('value', 'delete_profile');
	  $("#form-step1").submit();
	}

	this.clearTplProduct = () => {

	    $("input[name='tpl_product']").prop('value', '').removeAttr('disabled');
	    $("input[name='tpl_product_id']").prop('value', '');
	    $("#view_tpl_product").removeProp('href');
	}
	
	var max_server_file_size = {{ max_server_file_size }};

	this.inputFileHandler = (evt) => {

	  var files = evt.target.files;
		if (!files.length) {
			return;
		}

		this.resetMark('delimiter');
		this.resetMark('charset');
		
		if (files[0].size > max_server_file_size) {
			ka_extensions.showMessage('{{ t('The file size exceeds limit...') }}', 
				'E'
			);
		}

		var xls_pattern = new RegExp("\.[xml]$", "i");
		if (xls_pattern.test(files[0].name)) {
			ka_extensions.showMessage('{{ t('Be careful. The file has xm...') }}', 'E');
		}
			
		var xls_pattern = new RegExp("\.[xls|xlsx]$", "i");
		if (xls_pattern.test(files[0].name)) {
			ka_extensions.showMessage('{{ t('Be careful. The file has MS...') }}', 'E');
		}

		var xls_pattern = new RegExp("\.[zip|arj|rar]$", "i");
		if (xls_pattern.test(files[0].name)) {
			ka_extensions.showMessage('{{ t('Be careful. The file has an...') }}', 'E');
		}
		
		var blob = files[0].slice(0, 1024 * 4);
		var reader = new FileReader();
		reader.onloadend  = this.onBlobLoadEnd;
		reader.readAsDataURL(blob);
	}	

	
	this.onBlobLoadEnd = (evt) => {

		if (evt.target.readyState != FileReader.DONE) {
			return;
		}
		
		var file_data = evt.target.result;
		
	  $.ajax({
	    url: 'index.php?route=extension/ka_product_import/import|examineFileData&user_token={{ user_token }}',
	    type: 'POST',
	    dataType: 'json',
	    data: 'file_data=' + encodeURIComponent(file_data.match(/,(.*)$/)[1]),
			beforeSend: function() {
			},
			complete: function() {
			},
	    success: function(data) {
	    
	    	if (data.error) {
	    		ka_extensions.showMessage(data.error, 'E');
	    		return;
	    	}
	    	
	    	if (data.delimiter) {
	    		$('select[name="delimiter"] option[value="' + data['delimiter'] + '"]').prop('selected', true);
	    		
	    		if ($('#delimiter_option').val() == 'predefined') {
	    			ka_step1.showMark('delimiter');
					}
	    	}
	    	
	    	if (data.charset) {
		    	$('select[name="charset"] option[value="' + data['charset'] + '"]').prop('selected', true);
		    	
		    	if ($('#charset_option').val() == 'predefined') {
		    		ka_step1.showMark('charset');
					}
	    	}
	    }
	        
	  });
	}
	
}


$(document).ready(function() {

	ka_step1.refreshLocation();
	ka_step1.refreshDelimiter();
	ka_step1.refreshCharset();
		
	// enable autocompletion for template product search
	//
	$('input[name=\'tpl_product\']').autocomplete({
	  source: function(request, response) {
	    $.ajax({
	      url: 'index.php?route=extension/ka_product_import/import|completeTpl&user_token={{ user_token }}',
	      type: 'POST',
	      dataType: 'json',
	      data: 'filter_name=' + encodeURIComponent(request),
	      success: function(data) {
	        response($.map(data, function(item) {
	          return {
	            label: item.name,
	            value: item.product_id
	          }
	        }));
	      }
	    });
	  },
	  select: function(item) {

	    $("input[name='tpl_product']").prop('value', item.label).prop('disabled', 'disabled');
	    $("input[name='tpl_product_id']").prop('value', item.value);
	    $("#view_tpl_product").prop('href', '{{ product_url }}' + '&product_id=' + item.value);

	    return false;
	  }
	});

	// enable background processing for uploaded files
	//
	if (window.File && window.FileReader && window.FileList && window.Blob) {
		$('#input_file').on('change', ka_step1.inputFileHandler);
		$('#input_file2').on('change', ka_step1.inputFileHandler);
	}
	
});

//--></script>

{% endblock %}