!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?module.exports=e():"function"==typeof define&&define.amd?define(e):t.lozad=e()}(this,function(){"use strict";var t="undefined"!=typeof document&&document.documentMode,e=function(t){return window&&window[t]},r=["data-iesrc","data-alt","data-src","data-srcset","data-background-image","data-toggle-class"],a={rootMargin:"0px",threshold:0,enableAutoReload:!1,load:function(e){if("picture"===e.nodeName.toLowerCase()){var r=e.querySelector("img"),a=!1;null===r&&(r=document.createElement("img"),a=!0),t&&e.getAttribute("data-iesrc")&&(r.src=e.getAttribute("data-iesrc")),e.getAttribute("data-alt")&&(r.alt=e.getAttribute("data-alt")),a&&e.append(r)}if("video"===e.nodeName.toLowerCase()&&!e.getAttribute("data-src")&&e.children){for(var o=e.children,i=void 0,n=0;n<=o.length-1;n++)(i=o[n].getAttribute("data-src"))&&(o[n].src=i);e.load()}e.getAttribute("data-poster")&&(e.poster=e.getAttribute("data-poster")),e.getAttribute("data-src")&&(e.src=e.getAttribute("data-src")),e.getAttribute("data-srcset")&&e.setAttribute("srcset",e.getAttribute("data-srcset"));var d=",";if(e.getAttribute("data-background-delimiter")&&(d=e.getAttribute("data-background-delimiter")),e.getAttribute("data-background-image"))e.style.backgroundImage="url('"+e.getAttribute("data-background-image").split(d).join("'),url('")+"')";else if(e.getAttribute("data-background-image-set")){var u=e.getAttribute("data-background-image-set").split(d),g=u[0].substr(0,u[0].indexOf(" "))||u[0];g=-1===g.indexOf("url(")?"url("+g+")":g,1===u.length?e.style.backgroundImage=g:e.setAttribute("style",(e.getAttribute("style")||"")+"background-image: "+g+"; background-image: -webkit-image-set("+u+"); background-image: image-set("+u+")")}e.getAttribute("data-toggle-class")&&e.classList.toggle(e.getAttribute("data-toggle-class"))},loaded:function(){}};function o(t){t.setAttribute("data-loaded",!0)}var i=function(t){return"true"===t.getAttribute("data-loaded")},n=function(t){var e=1<arguments.length&&void 0!==arguments[1]?arguments[1]:document;return t instanceof Element?[t]:t instanceof NodeList?t:e.querySelectorAll(t)};return function(){var t,d,u,g=0<arguments.length&&void 0!==arguments[0]?arguments[0]:".lozad",s=1<arguments.length&&void 0!==arguments[1]?arguments[1]:{},c=Object.assign({},a,s),l=c.root,b=c.rootMargin,f=c.threshold,m=c.enableAutoReload,A=c.load,v=c.loaded,h=void 0,p=void 0;e("IntersectionObserver")&&(h=new IntersectionObserver((t=A,d=v,function(e,r){e.forEach(function(e){(0<e.intersectionRatio||e.isIntersecting)&&(r.unobserve(e.target),i(e.target)||(t(e.target),o(e.target),d(e.target)))})}),{root:l,rootMargin:b,threshold:f})),e("MutationObserver")&&m&&(p=new MutationObserver((u=A,function(t){t.forEach(function(t){i(t.target)&&"attributes"===t.type&&-1<r.indexOf(t.attributeName)&&u(t.target)})})));for(var k,y=n(g,l),w=0;w<y.length;w++)(k=y[w]).getAttribute("data-placeholder-background")&&(k.style.background=k.getAttribute("data-placeholder-background"));return{observe:function(){for(var t=n(g,l),e=0;e<t.length;e++)i(t[e])||(h?(p&&m&&p.observe(t[e],{subtree:!0,attributes:!0,attributeFilter:r}),h.observe(t[e])):(A(t[e]),o(t[e]),v(t[e])))},triggerLoad:function(t){i(t)||(A(t),o(t),v(t))},observer:h,mutationObserver:p}}});